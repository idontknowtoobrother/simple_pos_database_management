/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import com.formdev.flatlaf.FlatDarkLaf;
import data.GlobalData;
import java.awt.Color;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import model.Product;
import utils.DatabaseService;
import utils.Notify;

/**
 *
 * @author hexademical
 */
public class AddNewProduct extends javax.swing.JFrame {

    /**
     * Creates new form AddNewProduct
     */
    public AddNewProduct() {
        initComponents();
        this.setVisible(true);

        getContentPane().setBackground(new Color(26, 35, 39));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        newProductNameTextField = new javax.swing.JTextField();
        newProductPriceTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        newProductTotalTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        newProductDescriptionTextArea = new javax.swing.JTextArea();
        addNewProductButton = new javax.swing.JButton();
        cancelAddProductButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Product");
        setBackground(new java.awt.Color(26, 35, 39));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Product");

        jLabel2.setFont(new java.awt.Font("Noto Sans Thai", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(201, 209, 217));
        jLabel2.setText("เพิ่มสินค้าใหม่");

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name :");

        newProductNameTextField.setBackground(new java.awt.Color(94, 94, 94));
        newProductNameTextField.setFont(new java.awt.Font("Noto Sans Thai", 0, 12)); // NOI18N
        newProductNameTextField.setForeground(new java.awt.Color(201, 209, 217));
        newProductNameTextField.setText("ชื่อสินค้า");
        newProductNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newProductNameTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newProductNameTextFieldFocusLost(evt);
            }
        });
        newProductNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProductNameTextFieldActionPerformed(evt);
            }
        });

        newProductPriceTextField.setBackground(new java.awt.Color(94, 94, 94));
        newProductPriceTextField.setFont(new java.awt.Font("Noto Sans Thai", 0, 12)); // NOI18N
        newProductPriceTextField.setForeground(new java.awt.Color(201, 209, 217));
        newProductPriceTextField.setText("ราคาสินค้า");
        newProductPriceTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newProductPriceTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newProductPriceTextFieldFocusLost(evt);
            }
        });
        newProductPriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProductPriceTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Price :");

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Total :");

        newProductTotalTextField.setBackground(new java.awt.Color(94, 94, 94));
        newProductTotalTextField.setFont(new java.awt.Font("Noto Sans Thai", 0, 12)); // NOI18N
        newProductTotalTextField.setForeground(new java.awt.Color(201, 209, 217));
        newProductTotalTextField.setText("จำนวนสินค้า");
        newProductTotalTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newProductTotalTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newProductTotalTextFieldFocusLost(evt);
            }
        });
        newProductTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProductTotalTextFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Description :");

        newProductDescriptionTextArea.setBackground(new java.awt.Color(94, 94, 94));
        newProductDescriptionTextArea.setColumns(20);
        newProductDescriptionTextArea.setFont(new java.awt.Font("Noto Sans Thai", 0, 12)); // NOI18N
        newProductDescriptionTextArea.setForeground(new java.awt.Color(201, 209, 217));
        newProductDescriptionTextArea.setRows(5);
        newProductDescriptionTextArea.setText("รายละเอียดสินค้า");
        newProductDescriptionTextArea.setOpaque(false);
        newProductDescriptionTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newProductDescriptionTextAreaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                newProductDescriptionTextAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(newProductDescriptionTextArea);

        addNewProductButton.setBackground(new java.awt.Color(62, 165, 115));
        addNewProductButton.setFont(new java.awt.Font("Noto Sans Thai", 0, 14)); // NOI18N
        addNewProductButton.setForeground(new java.awt.Color(255, 255, 255));
        addNewProductButton.setText("เพิ่ม");
        addNewProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewProductButtonActionPerformed(evt);
            }
        });

        cancelAddProductButton.setBackground(new java.awt.Color(61, 127, 161));
        cancelAddProductButton.setFont(new java.awt.Font("Noto Sans Thai", 0, 14)); // NOI18N
        cancelAddProductButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelAddProductButton.setText("ยกเลิก");
        cancelAddProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAddProductButtonActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/add68x68.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6)
                        .addComponent(newProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addComponent(newProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(newProductTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addNewProductButton)
                        .addGap(6, 6, 6)
                        .addComponent(cancelAddProductButton)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(newProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(newProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(newProductTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jLabel6)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addNewProductButton)
                    .addComponent(cancelAddProductButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(733, 558));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newProductNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProductNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newProductNameTextFieldActionPerformed

    private void newProductPriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProductPriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newProductPriceTextFieldActionPerformed

    private void newProductTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProductTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newProductTotalTextFieldActionPerformed

    private void cancelAddProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAddProductButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelAddProductButtonActionPerformed

    private boolean validateProductData() {
        String productName = newProductNameTextField.getText();
        String productPriceStr = newProductPriceTextField.getText();
        String productTotalStr = newProductTotalTextField.getText();
        String productDescription = newProductDescriptionTextArea.getText();

        // Validate productName is not empty
        if (productName.isEmpty() || productName.equals("ชื่อสินค้า")) {
            // แจ้งเตือนเมื่อชื่อสินค้าว่าง
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกชื่อสินค้า", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate productPrice is a valid double
        if (productPriceStr.equals("ราคาสินค้า")) {
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกราคาที่ถูกต้อง เช่น 40.00", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            double productPrice = Double.parseDouble(productPriceStr);
        } catch (NumberFormatException e) {
            // แจ้งเตือนเมื่อราคาสินค้าไม่ถูกต้อง
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกราคาที่ถูกต้อง เช่น 40.00", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // Validate productTotal is a valid integer
        if (productTotalStr.equals("จำนวนสินค้า")) {
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกจำนวนสินค้าที่มีให้ให้ถูกต้อง เช่น 50", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        try {
            int productTotal = Integer.parseInt(productTotalStr);
        } catch (NumberFormatException e) {
            // แจ้งเตือนเมื่อจำนวนสินค้าที่มีให้ไม่ถูกต้อง
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกจำนวนสินค้าที่มีให้ให้ถูกต้อง เช่น 50", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validate productDescription is not empty
        if (productDescription.equals("รายละเอียดสินค้า")) {
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกคำอธิบายสินค้า", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (productDescription.isEmpty()) {
            // แจ้งเตือนเมื่อคำอธิบายสินค้าว่าง
            Notify.showNotify(this, "ข้อผิดพลาด", "กรุณากรอกคำอธิบายสินค้า", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        // ข้อมูลทั้งหมดถูกต้อง
        return true;
    }


    private void addNewProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewProductButtonActionPerformed
        if (!validateProductData()) {
            return;
        }

        String productName = newProductNameTextField.getText();
        String productDescription = newProductDescriptionTextArea.getText();
        double productPrice = Double.parseDouble(newProductPriceTextField.getText());
        int productTotal = Integer.parseInt(newProductTotalTextField.getText());

        // Create new Product instance
        Product newProduct = new Product();
        newProduct.setName(productName);
        newProduct.setDescription(productDescription);
        newProduct.setPrice(productPrice);
        newProduct.setTotalAvailable(productTotal);

        // ปุ่มยืนยันการเพิ่มสินค้าใหม่ พร้อมข้อมูลที่กรอกเข้าไป
        if (Notify.confirmOption(this, "ยืนยันการเพิ่มสินค้าใหม่", "คุณต้องการเพิ่มสินค้า " + newProduct.getName() + " ใหม่ใช่หรือไม่?")) {
            // แจ้งเตือนเมื่อสินค้าถูกเพิ่มเข้าไปในฐานข้อมูล
            if (DatabaseService.getInstance().addNewProduct(GlobalData.getInstance().getCurrentLoginnedUser().getUserId(), newProduct) == 1) {
                Notify.showNotify(this, "สำเร็จ", "เพิ่มสินค้าใหม่เรียบร้อยแล้ว", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }
        }
    }//GEN-LAST:event_addNewProductButtonActionPerformed

    private void newProductNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductNameTextFieldFocusGained
        if (newProductNameTextField.getText().equals("ชื่อสินค้า")) {
            newProductNameTextField.setText("");
            newProductNameTextField.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_newProductNameTextFieldFocusGained

    private void newProductNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductNameTextFieldFocusLost
        if (newProductNameTextField.getText().equals("")) {
            newProductNameTextField.setText("ชื่อสินค้า");
            newProductNameTextField.setForeground(new Color(201, 209, 217));
        }
    }//GEN-LAST:event_newProductNameTextFieldFocusLost

    private void newProductPriceTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductPriceTextFieldFocusGained
        if (newProductPriceTextField.getText().equals("ราคาสินค้า")) {
            newProductPriceTextField.setText("");
            newProductPriceTextField.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_newProductPriceTextFieldFocusGained

    private void newProductPriceTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductPriceTextFieldFocusLost
        if (newProductPriceTextField.getText().equals("")) {
            newProductPriceTextField.setText("ราคาสินค้า");
            newProductPriceTextField.setForeground(new Color(201, 209, 217));
        }
    }//GEN-LAST:event_newProductPriceTextFieldFocusLost

    private void newProductTotalTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductTotalTextFieldFocusGained
        if (newProductTotalTextField.getText().equals("จำนวนสินค้า")) {
            newProductTotalTextField.setText("");
            newProductTotalTextField.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_newProductTotalTextFieldFocusGained

    private void newProductTotalTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductTotalTextFieldFocusLost
        if (newProductTotalTextField.getText().equals("")) {
            newProductTotalTextField.setText("จำนวนสินค้า");
            newProductTotalTextField.setForeground(new Color(201, 209, 217));
        }
    }//GEN-LAST:event_newProductTotalTextFieldFocusLost

    private void newProductDescriptionTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductDescriptionTextAreaFocusGained
        if (newProductDescriptionTextArea.getText().equals("รายละเอียดสินค้า")) {
            newProductDescriptionTextArea.setText("");
            newProductDescriptionTextArea.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_newProductDescriptionTextAreaFocusGained

    private void newProductDescriptionTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newProductDescriptionTextAreaFocusLost
        if (newProductDescriptionTextArea.getText().equals("")) {
            newProductDescriptionTextArea.setText("รายละเอียดสินค้า");
            newProductDescriptionTextArea.setForeground(new Color(201, 209, 217));
        }
    }//GEN-LAST:event_newProductDescriptionTextAreaFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AddNewProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewProductButton;
    private javax.swing.JButton cancelAddProductButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea newProductDescriptionTextArea;
    private javax.swing.JTextField newProductNameTextField;
    private javax.swing.JTextField newProductPriceTextField;
    private javax.swing.JTextField newProductTotalTextField;
    // End of variables declaration//GEN-END:variables
}
